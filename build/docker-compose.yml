version: "3"

# https://yeasy.gitbook.io/docker_practice/compose/compose_file#du-qu-bian-liang
# https://yeasy.gitbook.io/docker_practice/image/dockerfile/arg

# GIT_REVISION=$(git rev-parse HEAD)
# docker-compose config
# docker-compose build
# docker-compose up

services:
  fresh:
    container_name: fresh
    image: registry.baomihua.xyz/baopeng/fresh:latest
    # build:
    #   context: ./
    #   dockerfile: Dockerfile
    #   args:
    #     - GIT_REVISION # echo ${GIT_REVISION} 先确认有值。
    # restart: always
    # environment:
      # - ELASTICSEARCH_HOSTS="http://192.168.2.44:9200"
      # security settings
      # - ELASTICSEARCH_USERNAME=elastic
      # - ELASTICSEARCH_PASSWORD=somethingsecret
    ports:
      - 8000:8000
    networks:
      - fresh-network
    logging:
      driver: json-file
      options:
        max-size: "200k" # 单个文件大小为200k
        max-file: "10" # 最多10个文件
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8000/health"] # 设置检测程序
    #   interval: 2m # 设置检测间隔
    #   timeout: 10s # 设置检测超时时间
    #   retries: 3 # 设置重试次数
    #   start_period: 40s # 启动后，多少秒开始启动检测程序
  
  nginx:
    container_name: fresh-nginx
    image: nginx:alpine
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
      target: nginx
    ports:
      - 80:80
    # volumes:
    #  - ./web:/usr/share/nginx/html
    #  - ./default.conf:/etc/nginx/conf.d/default.conf
    #  - /Volumes/Work/Deno/fresh-project/build/nginx/:/etc/nginx/conf.d/
    networks:
      - fresh-network
    # healthcheck:
    #     test: curl --fail http://localhost || exit 1
    #     interval: 60s
    #     retries: 5
    #     start_period: 20s
    #     timeout: 10s

# docker network create fresh-network
networks:
  fresh-network:
    # external: true
    # driver: bridge
        



# run
# docker run -t -i -p 18000:8000 registry.baomihua.xyz/baopeng/fresh
# docker-compose up

# debug
# docker exec -it fresh bash
# curl http://192.168.2.44:9200
# search
# curl -XGET "http://192.168.2.44:9200/bookmark-mysql/_search" -H 'Content-Type: application/json' -d'{  "query" : {    "match": { "name": "spring" }  },  "_source": ["name", "id", "content"],  "size": 10}'

# curl http://localhost:18000/api/bookmarks?query=spring&field=content

